apiVersion: v1
kind: Secret
metadata:
  name: {{ include "identity-service.fullname" . }}-secret
  labels:
    {{- include "identity-service.labels" . | nindent 4 }}
type: Opaque
stringData:
  # Database credentials
  SPRING_DATASOURCE_URL: "jdbc:postgresql://{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
  SPRING_DATASOURCE_USERNAME: {{ .Values.database.username | quote }}
  SPRING_DATASOURCE_PASSWORD: {{ .Values.database.password | quote }}
  
  # Keycloak credentials
  KEYCLOAK_SERVER_URL: {{ .Values.keycloak.serverUrl | quote }}
  KEYCLOAK_REALM: {{ .Values.keycloak.realm | quote }}
  KEYCLOAK_CLIENT_ID: {{ .Values.keycloak.clientId | quote }}
  KEYCLOAK_CLIENT_SECRET: {{ .Values.keycloak.clientSecret | quote }}
  
  # OAuth2 Resource Server - JWT
  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "{{ .Values.keycloak.serverUrl }}/realms/{{ .Values.keycloak.realm }}"
  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "{{ .Values.keycloak.serverUrl }}/realms/{{ .Values.keycloak.realm }}/protocol/openid-connect/certs"
  
  # Kafka configuration (ako koristite)
  SPRING_KAFKA_BOOTSTRAP_SERVERS: {{ .Values.kafka.bootstrapServers | quote }}
  SPRING_KAFKA_CONSUMER_GROUP_ID: {{ .Values.kafka.groupId | quote }}
  
{{- if .Values.extraSecrets }}
{{- range $key, $value := .Values.extraSecrets }}
  {{ $key }}: {{ $value | quote }}
{{- end }}
{{- end }}