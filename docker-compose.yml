version: '3.8'

services:
  # ============================
  # Zookeeper 
  # ============================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - infra
    volumes:
      - zk_data:/var/lib/zookeeper/data
      - zk_log:/var/lib/zookeeper/log

  # ============================
  # Kafka Broker
  # ============================
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"     # internal broker (za mikroservise)
      - "29092:29092"   # external (localhost za test)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - infra
    volumes:
      - kafka_data:/var/lib/kafka/data

  # ============================
  # ElasticSearch
  # ============================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false   # disable security for local dev
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"   # REST API
    networks:
      - infra
    volumes:
      - es_data:/usr/share/elasticsearch/data

  # ============================
  # Kibana
  # ============================
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"   # Web UI
    networks:
      - infra

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    networks:
      - infra

  # Loki - logovi
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - infra

  # Promtail - log collector
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./observability/promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki
    networks:
      - infra

  # Tempo - tracing
  # Tempo - tracing
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    user: "0:0"  # <-- DODAJ OVO (run as root da moÅ¾e da kreira foldere)
    ports:
      - "3200:3200"  # Tempo HTTP
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
    volumes:
      - ./observability/tempo-config.yaml:/etc/tempo/tempo.yaml
      - tempo-data:/tmp/tempo
    command: -config.file=/etc/tempo/tempo.yaml
    networks:
      - infra

  # Grafana - vizualizacija
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./observability/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
      - tempo
    networks:
      - infra

networks:
  infra:
    driver: bridge

volumes:
  es_data:
  zk_data:
  zk_log:
  kafka_data:
  prometheus-data:
  loki-data:
  tempo-data:
  grafana-data:

