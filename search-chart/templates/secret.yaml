apiVersion: v1
kind: Secret
metadata:
  name: {{ include "search-service.fullname" . }}-secret
  labels:
    {{- include "search-service.labels" . | nindent 4 }}
type: Opaque
stringData:
  # Elasticsearch configuration
  SPRING_ELASTICSEARCH_URIS: {{ .Values.elasticsearch.uris | quote }}
  
  # Kafka configuration
  SPRING_KAFKA_BOOTSTRAP_SERVERS: {{ .Values.kafka.bootstrapServers | quote }}
  SPRING_KAFKA_CONSUMER_GROUP_ID: {{ .Values.kafka.consumerGroupId | quote }}
  SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: {{ .Values.kafka.autoOffsetReset | quote }}
  SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: {{ .Values.kafka.consumer.keyDeserializer | quote }}
  SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: {{ .Values.kafka.consumer.valueDeserializer | quote }}
  SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: {{ .Values.kafka.consumer.trustedPackages | quote }}
  
  # OAuth2 Resource Server - JWT
  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "{{ .Values.keycloak.serverUrl }}/realms/{{ .Values.keycloak.realm }}"
  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "{{ .Values.keycloak.serverUrl }}/realms/{{ .Values.keycloak.realm }}/protocol/openid-connect/certs"
  
  # CORS
  APP_CORS_ALLOWED_ORIGINS: {{ .Values.cors.allowedOrigins | quote }}
  
{{- if .Values.extraSecrets }}
{{- range $key, $value := .Values.extraSecrets }}
  {{ $key }}: {{ $value | quote }}
{{- end }}
{{- end }}