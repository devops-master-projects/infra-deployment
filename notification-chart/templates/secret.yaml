apiVersion: v1
kind: Secret
metadata:
  name: {{ include "notification-service.fullname" . }}-secret
  labels:
    {{- include "notification-service.labels" . | nindent 4 }}
type: Opaque
stringData:
  # Database credentials
  SPRING_DATASOURCE_URL: "jdbc:postgresql://{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
  SPRING_DATASOURCE_USERNAME: {{ .Values.database.username | quote }}
  SPRING_DATASOURCE_PASSWORD: {{ .Values.database.password | quote }}
  
  # OAuth2 Resource Server - JWT
  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "{{ .Values.keycloak.serverUrl }}/realms/{{ .Values.keycloak.realm }}"
  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "{{ .Values.keycloak.serverUrl }}/realms/{{ .Values.keycloak.realm }}/protocol/openid-connect/certs"
  
  # Kafka configuration
  SPRING_KAFKA_BOOTSTRAP_SERVERS: {{ .Values.kafka.bootstrapServers | quote }}
  SPRING_KAFKA_CONSUMER_GROUP_ID: {{ .Values.kafka.consumerGroupId | quote }}
  SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: {{ .Values.kafka.autoOffsetReset | quote }}
  SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: "org.apache.kafka.common.serialization.StringDeserializer"
  SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: "org.apache.kafka.common.serialization.StringDeserializer"
  SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: "org.apache.kafka.common.serialization.StringSerializer"
  SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: "org.apache.kafka.common.serialization.StringSerializer"
  
  # Accommodation service URL
  ACCOMMODATION_SERVICE_URL: {{ .Values.services.accommodationUrl | quote }}